## TODO:
#   read AWS credential from .aws/config, then fallback to ENV variable
#

ENV["VAGRANT_DEFAULT_PROVIDER"] = "aws"

$script = <<SCRIPT
  yum update -y
  yum install -y docker git dos2unix
  usermod -G docker ec2-user
  sudo service docker start
SCRIPT

Vagrant.configure(2) do |config|

  config.vm.box = "amazon-linux"
  config.vm.box_url = "https://github.com/mitchellh/vagrant-aws/raw/master/dummy.box"

  config.vm.provider :aws do |aws, override|
    
    # replace with your access information here.
    aws.region = "us-west-2"
    aws.access_key_id = ENV["AWS_ACCESS_KEY"]
    aws.secret_access_key = ENV["AWS_SECRET_KEY"]
    aws.keypair_name = "miso-key"

    # instance 
    aws.ami = "ami-e7527ed7"                # Amazon Linux AMI 2015.03 (HVM)
    aws.instance_type = "c4.large"
    aws.security_groups = [ "sg-cbebbdae" ] # ssh, http/s only
    aws.subnet_id = "subnet-b1b259c6"       # subnet that vino runs on
    aws.associate_public_ip = true          # so that we can ssh into it

    # storage, default volume size is 8GB 
    aws.block_device_mapping = [
      { "DeviceName" => "/dev/xvda", "Ebs.VolumeSize" => 8 }
      ]      

    aws.tags = {
      "Name" => "docker-test",
     }

    override.ssh.username = "ec2-user"
    override.ssh.private_key_path = "~/.ssh/id_rsa"

    # to avoid error like "No host IP was given to the Vagrant core NFS helper."
    config.vm.synced_folder ".", "/vagrant", disabled: true

    # Amazon Linux sudo requires tty
    config.ssh.pty = true

  end 

  config.vm.provision "shell", inline: $script

end
